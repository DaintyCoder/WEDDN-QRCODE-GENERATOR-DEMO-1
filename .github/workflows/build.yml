name: Build QR Code Generator

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - platform: 'linux/amd64'
            os: 'ubuntu-22.04'
            artifact-name: 'linux-amd64'
          - platform: 'windows/amd64'
            os: 'windows-latest'
            artifact-name: 'windows-amd64'
          - platform: 'darwin/universal'
            os: 'macos-latest'
            artifact-name: 'darwin-universal'

    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'

      - name: Install Linux dependencies
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install Windows dependencies
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install -y mingw
          choco install -y upx  # Optional: Compresses the binary

      - name: Install macOS dependencies
        if: matrix.config.os == 'macos-latest'
        run: |
          xcode-select --install || true
          brew install upx || true  # Optional: Compresses the binary

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.8.0

      - name: Install npm dependencies and build frontend
        run: |
          cd frontend
          npm ci
          npm run build
          ls -la dist || dir dist

      - name: Build Wails app
        run: |
          wails build -platform ${{ matrix.config.platform }} -o QRCodeGenerator -clean -verbose || exit 1
        env:
          GO111MODULE: on

      - name: Debug build output
        run: |
          ls -la build/bin || dir build\bin
        shell: bash {0}

      - name: Install nfpm (Linux)
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v2.37.1

      - name: Install NSIS (Windows)
        if: matrix.config.os == 'windows-latest'
        run: choco install -y nsis

      - name: Install create-dmg (macOS)
        if: matrix.config.os == 'macos-latest'
        run: npm install -g create-dmg

      - name: Create Linux DEB installer
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          mkdir -p installer/usr/local/bin
          cp build/bin/QRCodeGenerator installer/usr/local/bin/
          nfpm package \
            --config .nfpm.yaml \
            --packager deb \
            --target build/bin/QRCodeGenerator.deb

      - name: Create Windows NSIS installer
        if: matrix.config.os == 'windows-latest'
        run: |
          mkdir installer
          if exist build\bin\QRCodeGenerator.exe (copy build\bin\QRCodeGenerator.exe installer\) else (echo "Windows binary not found" && exit 1)
          makensis //DPRODUCT_NAME=QRCodeGenerator //DOUTFILE=build\bin\QRCodeGenerator-installer.exe installer.nsi

      - name: Create macOS DMG installer
        if: matrix.config.os == 'macos-latest'
        run: |
          mkdir -p installer
          if [ -d "build/bin/QRCodeGenerator.app" ]; then cp -r build/bin/QRCodeGenerator.app installer/; else echo "macOS app bundle not found" && exit 1; fi
          create-dmg \
            --volname "QRCodeGenerator Installer" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --app-drop-link 600 185 \
            build/bin/QRCodeGenerator.dmg \
            installer/QRCodeGenerator.app

      - name: List build output
        run: |
          ls -la build/bin || dir build\bin
        shell: bash {0}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: QRCodeGenerator-${{ matrix.config.artifact-name }}
          path: build/bin/*
          if-no-files-found: error
