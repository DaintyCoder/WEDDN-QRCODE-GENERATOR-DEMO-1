name: Build and Package QR Code Generator

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - platform: 'linux/amd64'
            os: 'ubuntu-22.04'
          - platform: 'windows/amd64'
            os: 'windows-latest'
          - platform: 'darwin/universal'
            os: 'macos-latest'

    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install Linux dependencies
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install Windows dependencies
        if: matrix.config.os == 'windows-latest'
        run: choco install -y mingw

      - name: Install macOS dependencies
        if: matrix.config.os == 'macos-latest'
        run: xcode-select --install || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.1

      - name: Install npm dependencies
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Build Wails app
        run: |
          wails build -platform ${{ matrix.config.platform }} -o QRCodeGenerator
        env:
          GO111MODULE: on

      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create DEB package (Linux)
        if: matrix.config.platform == 'linux/amd64'
        run: |
          mkdir -p build/deb/QRCodeGenerator_${VERSION}_amd64/usr/local/bin
          mkdir -p build/deb/QRCodeGenerator_${VERSION}_amd64/usr/share/applications
          mkdir -p build/deb/QRCodeGenerator_${VERSION}_amd64/usr/share/icons/hicolor/256x256/apps
          cp build/bin/QRCodeGenerator build/deb/QRCodeGenerator_${VERSION}_amd64/usr/local/bin/
          cp build/appicon/appicon.png build/deb/QRCodeGenerator_${VERSION}_amd64/usr/share/icons/hicolor/256x256/apps/QRCodeGenerator.png
          cat << EOF > build/deb/QRCodeGenerator_${VERSION}_amd64/usr/share/applications/QRCodeGenerator.desktop
          [Desktop Entry]
          Name=QR Code Generator
          Exec=QRCodeGenerator
          Icon=QRCodeGenerator
          Type=Application
          Categories=Utility;
          EOF
          mkdir -p build/deb/QRCodeGenerator_${VERSION}_amd64/DEBIAN
          cat << EOF > build/deb/QRCodeGenerator_${VERSION}_amd64/DEBIAN/control
          Package: qrcodegenerator
          Version: ${VERSION}
          Architecture: amd64
          Maintainer: Your Name <your.email@example.com>
          Description: QR Code Generator app
          Depends: libgtk-3-0, libwebkit2gtk-4.0-37
          EOF
          dpkg-deb --build build/deb/QRCodeGenerator_${VERSION}_amd64
          mv build/deb/QRCodeGenerator_${VERSION}_amd64.deb build/bin/

      - name: Install Inno Setup (Windows)
        if: matrix.config.platform == 'windows/amd64'
        run: choco install innosetup -y

      - name: Create Inno Setup script (Windows)
        if: matrix.config.platform == 'windows/amd64'
        shell: pwsh
        run: |
          $issContent = @"
          [Setup]
          AppName=QR Code Generator
          AppVersion=${{ env.VERSION }}
          DefaultDirName={pf}\QRCodeGenerator
          OutputDir=build/bin
          OutputBaseFilename=QRCodeGenerator-${{ env.VERSION }}-setup
          [Files]
          Source: "build/bin/QRCodeGenerator.exe"; DestDir: "{app}"
          "@
          Set-Content -Path build/installer.iss -Value $issContent

      - name: Build Windows installer
        if: matrix.config.platform == 'windows/amd64'
        run: iscc build/installer.iss

      - name: Create macOS installer
        if: matrix.config.platform == 'darwin/universal'
        run: |
          pkgbuild --component build/bin/QRCodeGenerator.app \
                   --install-location /Applications \
                   --version ${{ env.VERSION }} \
                   build/bin/QRCodeGenerator-${{ env.VERSION }}.pkg

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.platform == 'linux/amd64' && format('QRCodeGenerator_{0}_amd64.deb', env.VERSION) || matrix.config.platform == 'windows/amd64' && format('QRCodeGenerator-{0}-setup.exe', env.VERSION) || format('QRCodeGenerator-{0}.pkg', env.VERSION) }}
          path: ${{ matrix.config.platform == 'linux/amd64' && format('build/bin/QRCodeGenerator_{0}_amd64.deb', env.VERSION) || matrix.config.platform == 'windows/amd64' && format('build/bin/QRCodeGenerator-{0}-setup.exe', env.VERSION) || format('build/bin/QRCodeGenerator-{0}.pkg', env.VERSION) }}
          if-no-files-found: error
